@Module
package org.lark;

public interface Serializer{
	
}

public class LarkConstants {
	public static final String VALUE = "value"; //0x42 byte
	public static final String CLASS = "clazz"; //0x43 char
	
	public static final char BYTE = 'B'; //0x42 byte
	public static final char CHAR = 'C'; //0x43 char
	public static final char DOUBLE = 'D'; //0x44 double
	public static final char FLOAT = 'F'; //0x46 float
	public static final char INT = 'I'; //0x49 int
	public static final char LONG = 'J'; //0x4A long
	public static final char CLASS_TAG = 'L'; //4C 类或者接口类型
	public static final char SHORT = 'S'; //0x53 short
	public static final char BOOLEAN = 'Z'; //0x5A boolean
	public static final char ARRAY = '['; //0x5B array
	public static final char END = ';'; //0x5B array
}

public class NumberSerializer implements Serializer{
	//Number
	public Object __read(Object object, Object[] handlers){
		return object[data];
	}
}

//String
public class StringSerializer implements Serializer{
	public Object __read(Object object, Object[] handlers){
		return object[data];
	}
}

//SomeBean
public class BeanSerializer implements Serializer{
	public Object __read(Object object, Object[] handlers){
		return object[data];
	}
}

//Array
public class ArraySerializer implements Serializer{
	public Object __read(Object object, Object[] handlers){
		return object[data];
	}
}

public class LarkInput{
	//LarkInput
	public  Object __read(Object[] root){
		Object[] array = new Object[]{};
		int count=0;
		for(int i=0;i<root.length;i++){
			Object element = object[i];
			String clazzName = element[LarkConstants.CLASS];
			Class clazz = __lc(clazzName);
			if(clazz.isPrimitive()){
				object[i] = clazz.__read(element);
			} else {
				array[count++] = object[i];
			}
		}
			
		for(var i=0; i<array.length; i++){
			var element = array[i];
			var clazzName = element[LarkConstants.CLASS];
			var clazz = __lc(clazzName);
			clazz.__read(element);
		}
		
		return root[0];
	}

}
